<project basedir="." default="default-end">

	<property name="in.dir" location="${basedir}/in"/>
	<property name="lib.ext.dir" location="${basedir}/lib-ext"/>
	<property name="log.dir" location="${basedir}/log"/>
	<property name="out.dir" location="${basedir}/out"/>
	<property name="xsl.dir" location="${basedir}/xsl"/>

	<property name="temp.dir" location="${basedir}/temp"/>
	<property name="temp.in.dir" location="${temp.dir}/in"/>
	<property name="temp.out.dir" location="${temp.dir}/out"/>

	<property name="input.file" location="${temp.in.dir}/input.html"/>
	<property name="input.package.file" location="${in.dir}/input.zip"/>
	<property name="log.file" location="${log.dir}/log.txt"/>
	<property name="output.file" location="${temp.out.dir}/output.html"/>
	<property name="output.package.file" location="${out.dir}/output.zip"/>
	<property name="xsl.file" location="${xsl.dir}/html-metadata-transform.xsl"/>

	<property name="unpack.all">false</property>

	<path id="lib-jars">
		<fileset dir="${lib.ext.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<target name="help">
		<echo message="Available targets:"/>
		<echo message="clean - Cleans 'temp' dir."/>
		<echo message="init - Creates 'temp' dir and starts logging. Depends on 'clean' target."/>
		<echo message="unpack-input-package - Unzips package in input folder and copies only files (flattern) to 'ant/temp/in'."/>
		<echo message="html-unpack-input-package - Copy plain input HTML files to 'ant/temp/in'."/>
		<echo message="prepare-input - Depends on 'init' and 'html-unpack-input-package' targets."/>
		<echo message="convert-metadata - Invokes XSLT transformation of 'input.html' file according to 'html-metadata-transform.xsl' rules. Depends on 'prepare-input' target."/>
		<echo message="create-package - Creates ZIP package with transformed HTML file and copies it to 'ant/out'. Depends on 'convert-metadata' target."/>
	</target>

	<target name="clean">
		<delete dir="${temp.dir}" failonerror="false"/>
	</target>

	<target name="init" depends="clean">
		<mkdir dir="${log.dir}"/>
		<record name="${log.file}" action="start" append="false"/>
		<mkdir dir="${temp.dir}"/>
	</target>

	<target name="unpack-input-package" if="${unpack.all}">
		<unzip src="${input.package.file}" dest="${in.dir}"/>
		<mkdir dir="${temp.in.dir}"/>
		<copy todir="${temp.in.dir}" >
			<fileset dir="${in.dir}">
				<include name="**/*.*"/>
			</fileset>
			<mapper type="flatten"/>
		</copy>
	</target>

	<target name="html-unpack-input-package" unless="${unpack.all}">
		<mkdir dir="${temp.in.dir}"/>
		<unzip src="${input.package.file}" dest="${temp.in.dir}">
			<patternset>
				<include name="**/*.html"/>
			</patternset>
			<mapper type="flatten"/>
		</unzip>
	</target>

	<target name="prepare-input" depends="init, unpack-input-package, html-unpack-input-package"/>

	<target name="convert-metadata" depends="prepare-input">
		<fail message="File ${input.file} does not exist">
			<condition>
				<not>
					<available file="${input.file}" />
				</not>
			</condition>
		</fail>
		<mkdir dir="${temp.out.dir}"/>
		<xslt in="${input.file}" out="${output.file}" style="${xsl.file}">
			<classpath refid="lib-jars"/>
		</xslt>
	</target>

	<target name="create-package" depends="convert-metadata">
		<mkdir dir="${out.dir}"/>
		<zip basedir="${temp.out.dir}" destfile="${output.package.file}" includes="*.html"/>
	</target>

	<target name="default-end" depends="create-package"/>

</project>